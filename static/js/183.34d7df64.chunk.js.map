{"version":3,"file":"static/js/183.34d7df64.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/NewPhonebook/ContactList/ContactList.jsx","components/NewPhonebook/ContactsEditor/ContactsEditor.jsx","components/NewPhonebook/Filter/Filter.jsx","components/NewPhonebook/NewPhonebook.jsx","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getisLoadind = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\n\n\n","import { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from '../../../redux/contacts/operations';\nimport * as contactsOperations from '../../../redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport styled, { keyframes } from 'styled-components';\nimport { useEffect } from 'react';\n\nconst ContactsList = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\nconst typing = keyframes`\n  from {\n    width: 0;\n  }\n   `;\nconst ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 30px;\n  margin: 10px;\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid white;\n  transition: cubic-bezier(0.075, 0.82, 0.165, 1);\n  transform: scale(1);\n  /* animation: ${typing} 2s steps(22), blink 1s step-end infinite alternate; */\n\n  &:hover {\n    color:#03e9f4;\n    transform: scale(1.01);\n    transition: cubic-bezier(0.075, 0.82, 0.165, 1);\n    border-color: #03e9f4;\n  }s\n`;\n\nconst ButtonItem = styled.button`\n  justify-content: center;\ncolor:#fff;\n  padding: 2px 15px;\n  border-radius: 5px;\n  background-color: transparent;\n  border: 2px solid #03e9f4;\n  &:hover {\n    color:#03e9f4;;\n    box-shadow: 0 0 5px #03e9f4,\n                0 0 25px #03e9f4,\n                0 0 40px #03e9f4,\n                0 0 60px #03e9f4;\n  }\n`;\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const normalaise = filter.toLowerCase();\n  const getContactsFilter = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalaise)\n  );\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsList>\n      {getContactsFilter.map(({ id, name, number, phone }) => {\n        // 1-422-661-2129 x6551\n        // const phoneNormalize = phone.match(/[х]/gi);\n        // console.log(phoneNormalize);\n        return (\n          <ContactItem  key={id}>\n            <p >\n              {name}: {number || phone}\n            </p>\n            <ButtonItem onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </ButtonItem>\n          </ContactItem>\n        );\n      })}\n    </ContactsList>\n  );\n};\n","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../../redux/contacts/operations';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\n\nconst CreateContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\nconst CreateContactFormlabel = styled.label`\n  margin: 5px;\n`;\nconst CreateContactFormInput = styled.input`\n  margin: 5px;\n  border-radius: 5px;\n  /* outline-color:#03e9f4; */\n`;\nconst Button = styled.button`\n  color: #fff;\n  margin: 0 auto;\n  justify-content: center;\n  max-width: 120px;\n  margin-top: 10px;\n  padding: 5px 15px;\n  border-radius: 5px;\n  background-color: transparent;\n  border: 2px solid#03e9f4;\n  &:hover {\n    color: #03e9f4;\n    box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 40px #03e9f4,\n      0 0 60px #03e9f4;\n  }\n`;\nexport const ContactsEditor = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n\n  const addContacts = () => {\n    const inList = contacts.find(\n      item => item.name.toLowerCase() === name.toLowerCase()\n    );\n\n    inList\n      ? alert(`${name} is alrady in contacts`)\n      : dispatch(addContact({ name, number }));\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addContacts({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <CreateContactForm onSubmit={handleSubmit}>\n        <CreateContactFormlabel htmlFor=\"nameContact\">\n          Name\n        </CreateContactFormlabel>\n        <CreateContactFormInput\n          onChange={e => setName(e.target.value)}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        ></CreateContactFormInput>\n\n        <CreateContactFormlabel htmlFor=\"number\">\n          Phone number\n        </CreateContactFormlabel>\n\n        <CreateContactFormInput\n          onChange={e => setNumber(e.target.value)}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        ></CreateContactFormInput>\n        <Button type=\"submit\">Add contact</Button>\n      </CreateContactForm>\n    </div>\n  );\n};\n","\nimport { useDispatch, useSelector } from 'react-redux';\nimport {  myFilter } from 'redux/contacts/slise';\nimport styled from 'styled-components';\nimport { getFilter } from \"../../../redux/contacts/selectors\"\n\n\nconst WrapperFindForm = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst Formlabel = styled.label`\n  margin: 5px;\n`;\nconst FormInput = styled.input`\n  margin: 5px;\n  border-radius: 5px;\n`;\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterString = useSelector(getFilter);\n\nconst handleFilter = (e) =>{\n  const value = e.target.value\n return dispatch(myFilter(value))\n  \n}\n\n  return (\n    <WrapperFindForm>\n      <Formlabel htmlFor=\"filter\"> Find contacts by name: </Formlabel>\n      <FormInput onChange={handleFilter} value={filterString} type=\"text\" name=\"filter\" />\n    </WrapperFindForm>\n  );\n};\n","import styled from 'styled-components';\nimport { ContactList } from './ContactList/ContactList';\nimport { ContactsEditor } from './ContactsEditor/ContactsEditor';\nimport { Filter } from './Filter/Filter';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { useAuth } from 'hooks/hooks'; \n\nconst ContactCounter = styled.p`\n  margin: 10px auto;\n  width: 100px;\n  text-align: center;\n  \n`;\nconst NameStyled = styled.b`\nfont-size:20px;\ncolor:#03e9f4;\ntext-shadow: #03e9f4 0 0 5px,\n             #03e9f4 0 0 25px ,\n             #03e9f4 0 0 50px,\n             #03e9f4 0 0 100px;\n             /* text-shadow: #FC0 1px 0 10px; */\n`;\nconst Title = styled.h1`\n  text-align: center;\n`;\n\nexport const NewPhonebook = () => {\n  const contacts = useSelector(getContacts);\nconst {user}=useAuth()\n  return (\n    <>\n      <div>\n        <ContactCounter>\n          Phonebook <NameStyled>{user.name}</NameStyled> <br />\n          <span>{contacts.length} </span>\n          contacts\n        </ContactCounter>\n      </div>\n      <ContactsEditor />\n      <Title>Contacts</Title>\n      <Filter></Filter>\n\n      <ContactList></ContactList>\n    </>\n  );\n};\n","import { NewPhonebook } from 'components/NewPhonebook/NewPhonebook';\nimport { Helmet } from 'react-helmet';\n\nexport default function Contacts () {\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <NewPhonebook />\n    </>\n  );\n};\n"],"names":["getContacts","state","contacts","items","getFilter","filter","ContactsList","styled","typing","keyframes","ContactItem","ButtonItem","ContactList","useSelector","dispatch","useDispatch","normalaise","toLowerCase","getContactsFilter","contact","name","includes","useEffect","contactsOperations","map","id","number","phone","onClick","deleteContact","CreateContactForm","CreateContactFormlabel","CreateContactFormInput","Button","ContactsEditor","useState","setName","setNumber","onSubmit","e","preventDefault","find","item","alert","addContact","htmlFor","onChange","target","value","type","title","required","WrapperFindForm","Formlabel","FormInput","Filter","filterString","myFilter","ContactCounter","NameStyled","Title","NewPhonebook","user","useAuth","length","Contacts","Helmet"],"sourceRoot":""}